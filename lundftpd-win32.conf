# Example config file for LundFTPD
# Generally, update the path's mentioned in here and the number of
# login, upload and downloads you wish to allow, but leave the rest
# as default.  Once you are an expert, twiddle with the other options
# if you want. :)



	#Set listen port # if any, otherwise /etc/server ftpd port is used
	#HUP/rehash has no effect, full restart required to take effect.
port 6688

	#Call remote identd for lookups?
useident on

	#User-file if any. (If none, only anonymous logins if anonymous is on)
	#HUP/rehash has no effect, full restart required to take effect.
        #WARNING: using chroot but not soft, causes a called to chdir()
	#and .conf may not be found. Specify full path in config.h
userfile "l-users.dat"

	#If you want NOTE system for users, set this path:
	#If you are root and run as chroot, make the dir owned root, and
	#only accessable by root (700). If you are not root, or not using
	#chroot, put it somewhere else not accessable by ftp-users.
      # This is a Directory
msgpath "l-msg"

	#220 server greeting and STAT reply. Leave NULL for IP reply (standard)
#greeting "localhost"


	#One liners. Defines this if you want the command enabled.
	#This is opened on demand and needs to have the FULLPATH.
wallpath ".oneliners"
walllogin off


	#Maximum concurrent logins allowed, 0 to disable
maximumlogins 0


	#Transfer buffer size. Common size is 1024 but if you have performance
	#issues, try using a bigger number. Like 8192. NOTE: If you use something
	#LARGER than your TCP network buffers on your system, usually checkable
	#by using 'sysctl -a', then the FTPD will run disgustingly slow.
	#Also, it is generally a good idea to keep this in ^2s. Ie, 1024, 2048,
	#4096, .... etc
	#NOTE 2: If you use TLS/SSL, make your data buffer size atleast 4096
	#bytes smaller than your TCP buffer size.
data_buffer_size 8192





#
#LOGGING
#

        #Log all file retr, stor, dele, rename
	#HUP/rehash has no effect, full restart required to take effect.
logxfer "l-ftpxfer.txt"

        #Log all user logon, and user exit.
	#HUP/rehash has no effect, full restart required to take effect.
loguser "l-ftpuser.txt"




#
#USER QUOTAS
#

	#File name of quota file. (Must be defined, even if they are all off)
quotafile "l-quota.dat"

	#The next three are only enabled if userquota is on!

	#Daily doanload quota, in KB. Default and -1 is disable quotadaily.
	#2 meg download everyday
userquotadaily 2000

	#User upload download ratio. Every upload of N bytes reward user of
	#quotaratio * N bytes download.
	# Default and -1 is disable quotaratio.
        # Don't mess with this, it breaks things. Now you set each user to
        # -1 if they have leech.
userquotaratio 3 

	#Daily time limit of user, in mins. Default (-1) is disable quotatime.
	#uploads are free
userquotatime -1



#
# USER FLAGS
#

	# Specify flags using "|" chars, no spaces, unless put in " "'s.
	# Set this to the lowest common class as there are no way to remove
	# default priviledges (yet)

	# No default flags
defaultflags UF_NONE

	# Allow users multiple logins, overwrite of files(any)
#defaultflags UF_LOGINS|UF_OVERWRITE

	# Allow users to do anything except KICK
#defaultflags UF_ALL|~UF_KICK



#
# USER / SYSTEM PASSWORD
#

	#if ON store passwords in userfile (requires userfile enabled), if OFF
	#use passwords store in /etc/passwd even if userfile is enabled or not.
	#Latter not implemented.
userpasswd on

	#Enable/Disable anonymous
anonymous off

	#Run as root for chown's? Pass along userID displacement value
	#but fall back to plain user all the time.
usesetuid on

	#When making unique userID's for ftp users, start at what position.
	#recommended to be far away from systems real users.
useridstart 1000

	#Call system to look up real users (as well as internal users) from
	#/etc/passwd?
lookupuid off

        #If uid lookup fails, display this name
nobody "lftpd"



#
# INTERNAL USER SETTINGS
#


	#Idle counter kick-off (They're on time anyway)
useridle 600

	#Match user remote-host on login? 
	#Use *@ip.ip.ip.ip for to ignore identd
usermatch on

	#Number of concurrent file transfers
xferlimit 4

        #Number of logins
loginlimit 3

        #Number of uploads (Default setting, can be overridden per user)
uploadlimit 2

        #Number of downloads
downloadlimit 2


	#Show last logins?
showlastlogin on





#
#FILE SYSTEM SETUP
#

	#userchroot /path -Will use chroot() if ftpd is run as root to
	#set a new root path, if it fails it will use a software
	# version of chroot().
	#Comment this out if users are allow to go anywhere on the system
	#Remember the quotes
	#HUP/rehash has no effect, full restart required to take effect.
        #
        # Oh yeah, the trailing '/' is fairly important, dupepath may fail.
usechroot "/cygdrive/e/ftp/"

	#If you want to use software chroot when run as root, has no effect
	#if run by non-root user, or if usrchroot is not set.
        #NOTE: No HUP or rehash will work when you DON'T use software chroot.
usesoftchroot on

	#Permissions for files and directories created
permfile 0666

permdir  0777

	# Define this IFF you want a 0-sized file created after mkdir's.
	# use %s for the username. (Nothing else or it may crash)
#mkdirstring "Uploaded by %s."
	

	#Uppercase the first letter of a directory?
        #(more or less useless as many smart clients can't find it)
uppercasedir off

	#Lowercase all files?
lowercasefile off


#
# DUPE CHECKING
#

	#Use the dupe checker?
dupecheck on

	#Define dupedb_path if you want to use the dupe checker, comment
	#it out otherwise
dupedbfile "l-dupedb.dat"

	#List all paths where the DUPE checker is active
        #This also controls which directories are announced with IRCBOT.
dupepath "pc/*"
dupepath "groups/Admin/pc/*"


#
# GROUP STUFF
#

	#If you want groups then define group_file
groupfile "l-groups.dat"
group "Admin"
group "mp3"
group "sfx"
group "pa"
group "koffdrop"
group "hoffman"

#
# Paths of where group directories go. THIS IS A FULL PATH
#
# it'll automatically create /groups/Group-1/  etc
#
# Don't define, or comment out if not used.
#

grouppath "/cygdrive/e/ftp/groups/"


#
#MISC
#

	#Who to email incase of bugs, displayed in HELP.
email "lundman"

	#File checking, in ascending order, put the most common extn last
	#If you don't want file checking, comment all filecheck lines out.

	# Addition, two new keywords are added, in place of tester string:
	# FREE 	  - File with extension is free.
	# NOCHECK - File is not check, but you are awarded bytes 
	#	    (For untestable files, at the moment, .bin.sit) 
	# Last digit is not used for there, but is still required.
	# INTERNAL - For .sfv testing, this can be performed internally
        #
	# $DIZ_FILE - filename just uploaded
        # $DIZ_DIR  - path to directory containing file.
	# $DIZ_USER - username of the uploader
	# $DIZ_GROUP- group name of the uploader
	# $DIZ_SITE - site name 
	#
	# additionally, upon failure, the return reason string can be passed
	# $DIZ_REASON - Empty file is created like $DIZ_FILE_$DIZ_REASON
	# for example, foobar.r02_MISSING_SFV_FILE
	#
      #IF YOU DEFINE THESE, THESE PATHS HAS TO EXIST OR THE PROGRAM WILL EXIT

	#  extn   test-exe                                 "good" return value
filecheck "*.foo" "/usr/local/bin/rartest" 0

filecheck "*.a[0123456789][0123456789]" "/usr/local/bin/unarj t"  0
#filecheck "*.r[0123456789][0123456789]" "/usr/local/bin/rar t"    0
filecheck "*.txt" FREE                                            0
filecheck "*.diz" FREE                                            0
filecheck "*.doc" FREE                                            0
filecheck "*.nfo" FREE                                            0
filecheck "*.message" FREE                                        0
filecheck "*.sit" NOCHECK                                         0
filecheck "*.lzx" NOCHECK                                         0
filecheck "*.gz" "/usr/local/bin/gunzip -t"                       0
filecheck "*.Z" "/usr/local/bin/gunzip -t"                        0
filecheck "*.lha" "/usr/local/bin/lha -t"                         0
filecheck "*.arj" "/usr/local/bin/unarj t"                        0
filecheck "*.dms" "/usr/local/bin/dmsdiz -t"                      0
filecheck "*.zip" "/usr/bin/unzip -t"                             0
filecheck "*.sfv"             INTERNAL                            0
filecheck "*.r[0-9][0-9]"     INTERNAL                            0
filecheck "*.rar"             INTERNAL                            0
filecheck "*.[0-9][0-9][0-9]" INTERNAL                            0
filecheck "*.mp3"             INTERNAL                            0


	#Maximum size of archive testing.
	#Set this if you machine can't handle testing archives over a 
	#certainly size. Set to 0 if you don't have any problems :)
	#Specify in MB!
maxsizecheck 0

	
	#Background archive testing. If this is enabled the archive-
	#testing is put in the background, and failures are reported
	#by SITE MSG (if enabled) and renamed to .bad. (As per usual)
backgroundtest on


	#Smart Paths, DO not get these wrong. Make sure they point to dirs
	#and not files, also make sure you have a trailing '/'!
smartpath "pc:" "/pub/files/pc/"
smartpath "am:" "/pub/files/amiga/"

	#newpath, add each path you want processed in the SITE NEW command
	#(path's as seen from inside the ftpd, not full system paths)
      # NO LONGER USED - BASED ON DUPE_PATH
newpath "/tmp/"


	#Do you want automatic file_id.diz extraction? When a upload has
	#completed, and archive testing was successful, it checks for the
	#existance of "file_id.diz" file, and if not found executes the 
	#program defined to extract it. File name is appened, and it
	#assumes stdout
      #IF YOU DEFINE THIS, THIS PATH HAS TO EXIST OR THE PROGRAM WILL EXIT
#autoextract_diz "/usr/local/bin/dmsdiz -s $DIZ_FILE > $DIZ_DIR/file_id.diz"
autoextract_diz "/usr/bin/unzip -nqqC \"$DIZ_DIR/$DIZ_FILE\" file_id.diz *.nfo -d \"$DIZ_DIR\" ; chmod 644 \"$DIZ_DIR/\"*.[Nn][Ff][Oo] \"$DIZ_DIR/\"*.[Dd][Ii][Zz]"



#
# Global IP-patterns allowed (if any)
#

globalmatch "*@127.0.0.1"



#
#ShadowFTPD defines.
#


        #Enable ShadowFTPD code?
useshadowftpd on

        #ONLY allow connections from ShadowFTPD?
shadowftpdonly off

        #Define ShadowFTPD ident@IP-patterns
shadowmatch "coke*@192.3.4.*"
shadowmatch "lundman@127.0.0.1"


#
# ShadowFTPD Master mode
#

	#Enable this and we'll only work through shadowftpd bouncers
beshadowmaster off

	#The minimum working bouncers we must have, or we stop all together
masterminshadows 1

#	List the bouncers now. IP-address, port and percentage workload.
mastershadow "192.10.13.32" 6699 100%
mastershadow "192.10.13.32" 6698 50%




#
# Irc Announce Bot Support
#

	#Define these information for the companion ircbot.
	#Make sure lftpd is compiled with IRCBOT if you want it to do anything
irchost "127.0.0.1"
ircport 9989
ircpass "UglyDuckling"


#
#
#

# Do we allow only secure/encrypted sessions, or normal as well?
# (SafeTP, SRP, SSL/TLS)

allow_only_secure off



#
# SRP Crypt Libraries (For ciphers)
#

	# Password files for users.These are generated on creation,modification
	# site passwd (user change), and login (if not previously set).
srp_passwdfile "l-srpdb.dat"

	# File of SRP conf key (prime). Generated once, or on demand.
	# Use SRP supplied program "tconf" to generate this.
srp_masterkey "l-srpmaster.dat"


#
# Data Transfer Rate Speed Capping
#

	# Enable this if you want to cap transfer speeds
	# It's not 100% accurate, but somewhere in the region of...
cpscap_enabled off

	# Per data connection, irrelevant to multiple logins
	# Maximum download speeds allowed in KB. (example 300 for 300KB/sec)
cpscap_download 0

	# Maximum upload speeds allowed in KB.
cpscap_upload 0

	# Per login session, combined data sessions for a user
	# Maximum download speeds allowed in KB. 
cpscap_user_download 150

	# Maximum upload speeds allowed in KB.
cpscap_user_upload 0


       # convert " " to "_" in path when MKD'ing
convertmkdspace on

       # convert " " to "_" in filename when STOR'ing
convertstorspace on

#
# TLS/SSL config, see TLS.ReadMeFirst for more information and help.
#
       
       # Full path to the one file containing both your RSA PRIVATE KEY and
       # RSA CERIFICATE.

tls_rsafile "lftpd.pem"

       # Specify the list of allowed ciphers, default is ALL but you might
       # want to disallow lame 40 bit ciphers such as DES
tls_ciphers "ALL"
#tls_ciphers  "RC4-SHA"

       # Support for EGD/PRNGD, for systems without /dev/urandom.

egdsocket "/var/run/egd-pool"


#
# MP3 Genre Extractor.
#
# Will create a zero byte file looking like :
# __MP3_Year_2001_-_Genre_House_MP3__ which will be created after a mp3
# file has passed SFV check.

extractmp3genre on
