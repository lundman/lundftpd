##---------------------------------------------------------------------------##
## LuNDFTPD CONFiG FiLE #######################################################
##---------------------------------------------------------------------------##
##                                                                           ##
## To get your daemon running as quickly as possible it is recommended that  ##
## the following config options are set.  All overs should have sensible     ##
## default values:                                                           ##
## - port, usechroot, greeting, dupepath, grouppath, newpath, msgpath        ##
##---------------------------------------------------------------------------##

##---------------------------------------------------------------------------##
## NeTWORK SeTTINGS ###########################################################
##---------------------------------------------------------------------------##

## PORT (INTEGER PORT)                                            [OPTIONAL] ##
## Set listen port # if any, otherwise /etc/server ftpd port is used.        ##
#port = 2020;
port = 56688;

## BINDIF (STRING IPADDR)                                         [OPTIONAL] ##
## Set listen address that logins/data channels are bound to. Comment out    ##
## to bind to all addresses (INADDR_ANY).                                    ##
#bindif = "127.0.0.1";

## USEIDENT (ON/OFF)                                              [OPTIONAL] ##
## Check remote server for IDENTD responses used in IP matching.             ##
useident = on;

## DATA_BUFFER_SIZE (INTEGER BYTES)                              [MANDATORY] ##
## Transfer buffer size.  Common size is 1024 but if you have performance    ##
## issues, try using a bigger number.  Like 8192. NOTE: If you use something ##
## LARGER than your TCP network buffers on your system, usually checkable by ##
## using 'sysctl -a', then the FTPD will run disgustingly slow.  Also, it is ##
## generally a good idea to keep this in ^2s. Ie, 1024, 2048, 4096, ... etc  ##
## NOTE 2: If you use TLS/SSL, make your data buffer size atleast 4096 bytes ##
## smaller than your TCP buffer size.
## NOTE 3: *BSD systems have an issue if size > MTU (usually 1500).          ##
#data_buffer_size = 1400;
data_buffer_size = 16384;


## DATA_BIND_PORT (INTEGER PORTNUM)                               [OPTIONAL] ##
## This option allows you to specify a port number that LundFTPD binds to    ##
## before connecting to a remote server that is waiting for a PASV connect.  ##
## Normally this is a random port but this option allows a specific port to  ##
## be specified in order to sidestep traffic shaping on certain networks.    ##
## Set this port to the unshaped port of the remote network in order to get  ##
## full speeds during FXP.  E.G. port 80 or 443 for communication with BBB   ##
## hosts.                                                                    ##
## !!!If you don't understand what this is doing, do not set this option.!!! ##
#data_bind_port = 443;


## DATA_PASV_RANGE (INTEGER PORTNUM)                              [OPTIONAL] ##
## With these two options you can set the minimum and maximum ports to use   ##
## with PASV replies. This generally is more of an advanced feature, that    ##
## help with firewall configuration. If you are unsure, leave these commented##
## out. You can also tweak the port range in your operating system, which    ##
## is more efficient. Both ports are inclusive.                              ##
#data_pasv_start = 4004;
#data_pasv_end   = 4114;




## DaTA TRaNSFER CAPPiNG #####################################################

## CAPPING (ON/OFF)                                              [OPTIONAL] ##
## Enable this if you want to cap transfer speeds.  It's not 100% accurate, ##
## but somewhere in the region of...                                        ##
capping = off;

## CAP_DOWNLOAD (INTEGER KILOBYTES)                              [OPTIONAL] ##
## Per data connection, irrelevant to multiple logins.  Maximum download    ##
## speeds allowed in KB. (E.G. 300 for 300KB/sec)
cap_download = 0;

## CAP_UPLOAD (INTEGER KILOBYTES)                                [OPTIONAL] ##
## Maximum upload speeds allowed in KB.                                     ##
cap_upload = 0;

## CAP_USER_DOWNLOAD (INTEGER KILOBYTES)                         [OPTIONAL] ##
## Per login session, combined data sessions for a user.  Maximum download  ##
## speeds allowed in KB.                                                    ##
cap_user_download = 0;

## CAP_USER_UPLOAD (INTEGER KILOBYTES)                           [OPTIONAL] ##
## Maximum upload speeds allowed in KB.                                     ##
cap_user_upload = 0;

## CAP_TOTAL_UPLOAD (INTEGER KILOBYTES)                          [OPTIONAL] ##
## Total upload speeds allowed for the entire site combined.                ##
cap_total_upload = 0;

## CAP_TOTAL_DOWNLOAD (INTEGER KILOBYTES)                       [OPTIONAL] ##
## Total download speeds allowed for the entire site combined.             ##
# This is the MOST inefficient one you can set, so don't set it lightly.
cap_total_download = 0;

## NOCAPIP (STRING IPMASK)                                      [OPTIONAL] ##
## You can also specify IP ranges where capping is disabled for.           ##
nocapip = "*@127.0.0.1";


##---------------------------------------------------------------------------##
## FiLE LOCATiONS/FiLESYSTEM SeTUP ############################################
##---------------------------------------------------------------------------##

## USERFILE (STRING FILENAME)                                     [OPTIONAL] ##
## User-file if any.  If none, only anonymous logins if ANONYMOUS is on.     ##
userfile = "ftp-data/users";

## MSGPATH (STRING FILENAME)                                      [OPTIONAL] ##
## If you want to enable the NOTE system for users, set this option.  If you ##
## are root and run as chroot, make the dir owned root, and only accessable  ##
## by root (chmod 700).  If you are not root, or not using chroot, put it    ##
## somewhere else not accessable by ftp-users.                               ##
msgpath = "ftp-data/notes";

## WALLPATH (STRING FILENAME)                                     [OPTIONAL] ##
## Defined this if you want the SITE WALL command enabled.  This displayes   ##
## messages by users on login to the site.                                   ##
wallpath = "ftp-data/walls";

## QUOTAFILE (STRING FILENAME)                                   [MANDATORY] ##
## Data containing all quota data such as total bytes up/down, credits, etc. ##
quotafile = "ftp-data/quota";

## DUPEDBFILE (STRING FILENAME)                                   [OPTIONAL] ##
## Storage location for dupes.                                               ##
dupedbfile = "ftp-data/dupedb";

## LOGXFER (STRING FILENAME)                                      [OPTIONAL] ##
## Log all file RETR, STOR, DELE, RENAME commands.                           ##
logxfer = "ftp-logs/ftpxfer";

## LOGUSER (STRING FILENAME)                                      [OPTIONAL] ##
## Log all LOGIN/LOGOUT.                                                     ##
loguser = "ftp-logs/ftpuser";

## LOGADMIN (STRING FILENAME)                                     [OPTIONAL] ##
## Log all ADMIN changes.                                                    ##
logadmin = "ftp-logs/ftpadmin";

## LOGROTATE (ON/OFF)                                             [OPTIONAL] ##
## Rotate log files daily. Default is OFF.                                   ##
logrotate = off;

## DUPEMAXDAYS (INT)                                              [OPTIONAL] ##
## Clean out dupe entries after INT days of age. Default is never.           ##
dupemaxdays = 0;



## USECHROOT (STRING PATH)                                        [OPTIONAL] ##
## Sets the root directory of the FTP site.  If running as root, it will     ##
## chroot() to this directory.  If not running as root, you will need to     ##
## turn on USESOFTCHROOT.  Commenting out USECHROOT will enable users to     ##
## access the entire system.                                                 ##
## NOTE:  Make sure there is a trailing '/' here.                            ##
#usechroot = "/files/";
usechroot = "/Users/lundman/ftp/data/tmp/";

## USESOFTCHROOT (ON/OFF)                                         [OPTIONAL] ##
## Does not chroot() to USECHROOT but instead handles this inside the        ##
## daemon.  This is useful if you have softlinks to directories from above   ##
## your USECHROOT path.  E.G. /NAS/site/incoming/ is a softlink to           ##
## /mnt/disk1/                                                               ##
## It is recommended to have this ON, but if you chose to disable it be aware##
## that many of the extra features in lundftpd will no longer function unless##
## you create copies of commands/files in the chrooted area.                 ##
usesoftchroot = on;

## PERMFILE (MODE)                                               [MANDATORY] ##
## Sets permission for all files created.                                    ##
permfile = 0666;

## GOODFILE (MODE)                                                [OPTIONAL] ##
## Once a file has been tested 100%, this permission is set.
goodfile = 0444;

## PERMDIR (MODE)                                                [MANDATORY] ##
## Sets permission for all directories created.                              ##
permdir = 0777;

## MKDIRSTRING (STRING FILENAME)                                  [OPTIONAL] ##
## Define this if you want a 0-sized file created after MKDIR's.  Use %s     ##
## for the username.                                                         ##
#mkdirstring = "[CREATED_BY_%s]";

## NO LIST RECURSION (PATH WILDCARD)                              [OPTIONAL] ##
## If you wish to stop recursive directory listings in certain areas so can  ##
## define those here. You can use wildcard matches. "*" means you can't      ##
## list recursively anywhere. "*.pre" and "/groups/*" are other examples.    ##
## A good idea would be to add your group directory followed by "/*".        ##
#norecurse = "*";
#norecurse = "/admin/*";

## NUMBER OF LIST HELPER PROCESSES                                [OPTIONAL] ##
## The number of processes to start that handle directory listing requests   ##
## for users. Generally 1 is sufficient, but if you have a huge volume of    ##
## recursive, or otherwise slow media, you can start more.                   ##
num_list_helpers = 1;



## SECTION (BLOCK)                                               [OPTIONAL] ##
## These configuration options dictate the behaviour of the daemon in       ##
## certain paths.  The following options are available:                     ##
##  - path         (string)   The path this section applies to.             ##
##  - name         (string)   Name of this section.                         ##
##  - smartpath    (string)   A shortened pathname that expands to path.    ##
##  - dupecheck    (on/off)   Check or add to dupedb.                       ##
##  - announce     (on/off)   Announce new directories/show in SITE NEW.    ##
##  - filecheck    (on/off)   Check files for integrity.                    ##
##  - deletebad    (on/off)   Delete files that fail filecheck.             ##
##  - racestats    (on/off)   Record/announce race stats.                   ##
##  - ratio        (integer)  Ratio of credits for uploading here (1:X)     ##
##  - hidefile     (string)   Wildcard of files to hide.                    ##
##  - denyfile     (string)   Wildcard of files to deny from being uploaded ##
##  - convertmkdspace  (on/off) Convert " " to "_" when MKD'ing.            ##
##  - convertstorspace (on/off) Convert " " to "_" when STOR'ing.           ##
##  - extractmp3genre  (on/off) Creates an MP3 info file showing genre/year ##
##  - uppercasedir  (on/off)  Converts all dirs to uppercase.               ##
##  - lowercasefile (on/off)  Converts all files to lowercase.              ##
##  - stealth      (on/off)   Do not show users in this section in WHO      ##
##  - request      (on/off)   Is this a request section (site request etc)  ##
##  - incompletes  (on/off)   Create INCOMPLETE directories in section root ##
##  - groups       (string)   List of groups allowed in this section        ##
##  - expand       (string)   If string is a soft-link, expand to its dest  ##
##                            Currently can only be 1 level, no "/" inside  ##
##  - remote       (string)   Connect to remote FTPD for this section       ##
##                                                                          ##
## The DEFAULT section should be left alone, as it contains sensible that   ##
## apply to all other sections.                                             ##
section {
	path             = "/";
	name             = "DEFAULT";
	hidefile         = ".state*";
	hidefile         = ".racestat*";
	denyfile         = ".*";
	denyfile         = "*100%*COMPLETE*";
	denyfile         = "*INCOMPLETE*";
	filecheck        = yes;
	dupecheck        = yes;
};

section {
	path		= "/incoming/";
	smartpath	= "inc:";
	name		= "iNCOMiNG";
	expand      = "today";
	announce	= yes;
	racestats	= yes;
	extractmp3genre = yes;
	extractimdb = yes;
	incompletes = yes;
};

section {
	path		= "/request/";
	smartpath	= "req:";
	name		= "ReQueST";
	announce	= yes;
    request     = yes;
};

## GROUP_SECTION (BLOCK)                                         [OPTIONAL] ##
## Special section named "_groups_default_" if defined, turns on auto-      ##
## creation of sections for groups when added as template. That is to say if##
## a new group is created, and this section is defined, it will create a new##
## section with the same settings, restricting access to just the new group.##
##
## path becomes the top level path for groups.
## name is set to group name
## groups is set to only the new group
## all other values are inherited from default
##
section {
    path = "/tmp/groups/";
    name = "_groups_default_";
    stealth = yes;
};




#
# Example remote section that connects to a remote FTPD for relaying commands.
#
# The "path" must be the same here and on remote FTPD. You can generally
# symlink your self around that if you want the "root" of the remote FTPD.
#
# If you use ":" instead of "@" in the "remote" keyword you enforce SSL login
# and it will fail if it can not. You need to make sure the remote FTPD lets
# the user have as many logins as you would want to support.
#
# You will most likely want to stop recursive ls to enter the "local" version
# of this directory, by using norecurse directive above. There is no urgency
# it will just show the empty local directory.
#
# You do not _have_ to have the directory existing in this FTPD, the remote
# section will work, however, it will then not show up in directory listings
# so users would not know it exists. But if you wish to hide it, and restrict
# access to this section, you should use "groups" and "stealth" directives.
#
#section {
#	path		= "/remote/";
#	smartpath	= "rem:";
#	name		= "Remote FTPD Section";
#	announce	= yes;
#	racestats	= yes;
#	remote      = "mp3:mp3@127.0.0.1:21";
#};


# If you define a area only certain users and/or groups should see, also
# make sure you stop recursive directory listings from entering it using the
# "norecurse" conf option above.
section {
	path = "/admin/";
    name = "Admin Area";
    stealth = yes;
    groups = "Elite,admins";
};


##---------------------------------------------------------------------------##
## Server Settings ############################################################
##---------------------------------------------------------------------------##

## GREETING (STRING)                                              [OPTIONAL] ##
## This option sets the greeting response on login, STAT, COMPLETE files and ##
## IRC announcements.  Ideally this should be the short name of the site.    ##
## (for those advanced admins, there is also rawgreeting)                    ##
#greeting = "ABC";

## EMAIL (STRING)                                                 [OPTIONAL] ##
## Who to contact when things go tits up.                                    ##
email = "root@localhost";

## WALLLOGIN (ON/OFF)                                             [OPTIONAL] ##
## Displays the last 10 SITE WALL commands on login if enabled.              ##
walllogin = on;

## MAXIMUMLOGINS (INTEGER)                                        [OPTIONAL] ##
## This sets the maximum concurrent logins to the site.  Set this to -1 to   ##
## disable.                                                                  ##
maximumlogins = -1;

## USERQUOTADAILY (INTEGER KILOBYTES)                            [MANDATORY] ##
## Sets the amount of data in KB that EACH user may download each day.  Set  ##
## this to -1 to disable.                                                    ##
userquotadaily = -1;

## USERQUOTARATIO (INTEGER RATIO)                                [MANDATORY] ##
## Sets the default upload:download ratio.  Every upload of N bytes reward   ##
## user of quotaratio * N bytes of credits.  USERQUOTARATIO must be a        ##
## positive number in this version of LundFTPD.  Set individual user's ratio ##
## to -1 to disable their quota and enable the power of leech.  Set to 0 to  ##
## disable awarding any credits for uploading (must rely on given credits).  ##
userquotaratio = 3;

## USERQUOTATIME (INTEGER MINUTES)                                [OPTIONAL] ##
## Daily time limit of user, in minutes.  Default (-1) is disable daily time ##
## limits.                                                                   ##
userquotatime = -1;

## ANONYMOUS (ON/OFF)                                             [OPTIONAL] ##
## Enable ftp/anonymous user login.                                          ##
anonymous = off;

## USESETUID (ON/OFF)                                            [MANDATORY] ##
## If enabled, and the server binary is owned by root and suid root, the     ##
## daemon will elevate to root for chowning files so the correct permissions ##
## are set on files/directories.                                             ##
usesetuid = on;

## USERIDSTART (INTEGER UID)                                     [MANDATORY] ##
## When setting the permission of files/directories on disk, this setting is ##
## added to the internal FTPD users ID.  E.G. USERIDSTART 10000 will set the ##
## permissions on disk created by the first user in the FTPD database to     ##
## 10001.                                                                    ##
useridstart = 10000;

## LOOKUPUID (ON/OFF)                                            [MANDATORY] ##
## Call system to look up real users (as well as internal users) from        ##
## /etc/passwd?                                                              ##
lookupuid = off;

## NOBODY (STRING WHO)                                           [MANDATORY] ##
## If LundFTPD can't find the owner of the file int is internal database and ##
## cannot find the user in /etc/passwd if LOOKUPUID is enabled, then this    ##
## string is displayed instead.                                              ##
nobody = "nobody";

## USERIDLE (INTEGER SECONDS)                                    [MANDATORY] ##
## Idle time kick in seconds.                                                ##
useridle = 600;

## USERMATCH (ON/OFF)                                            [MANDATORY] ##
## Match user remote-host on login?                                          ##
usermatch = on;

## SHOWLASTLOGIN (ON/OFF)                                        [MANDATORY] ##
## Show when/where the user last logged in from, any new messages etc..      ##
showlastlogin = on;

## GLOBALMATCH (STRING IPMASK)                                    [OPTIONAL] ##
## IP masks that match for all accounts for logging into the site.           ##
## Also, if you use ssl-lbnc bouncer, this controls where IDEN commands are  ##
## permitted to connect from.                                                ##
globalmatch = "*@127.0.0.1";
#globalmatch = "iden-cmd@127.0.0.1";

## FORCEGLOBALONLY (ON/OFF)                                       [OPTIONAL] ##
## If you are to use ssl-lbnc and want ONLY connections permitted from the   ##
## global list set this. You will not have ident reply for this pattern.     ##
forceglobalonly = no;



## EXTRACTMP3FORMAT (STRING FORMAT)                              [OPTIONAL] ##
## Defines what directory will be created when EXTRACTMP3GENRE is enabled.  ##
## This string may have the following special identifiers:                  ##
##  %t - total number of tracks                                             ##
##  %s - kbits                                                              ##
##  %g - genre                                                              ##
#extractmp3format "[MP3_COMPLETE_%t_TRACKS_%sKBITS_%g]"
#[AVN] - ( 157M 31F - COMPLETE - Pop 2003 ) - [AVN]

## FORCETAGLINE (ON/OFF)                                         [OPTIONAL] ##
## Forces users to set a tagline before they can upload/download.           ##
forcetagline = off;

## UNNUKE (ON/OFF)                                               [OPTIONAL] ##
## Specifies if nukes are unnukable.  If they are, anything nuked is left   ##
## on disk and can be unnuked.                                              ##
unnuke = on;


##---------------------------------------------------------------------------##
## ADDuSER DeFAULTS ###########################################################
##---------------------------------------------------------------------------##

## LOGINLIMIT (INTEGER LOGINS)                                   [MANDATORY] ##
## Sets the default number of concurrent logins a user gets.                 ##
loginlimit = 2;

## UPLOADLIMIT (INTEGER UPLOADS)                                 [MANDATORY] ##
## Sets the default number of concurrent uploads a user gets.                ##
uploadlimit = 2;

## DOWNLOADLIMIT (INTEGER DOWNLOADS)                             [MANDATORY] ##
## Sets the default number of concurrent downloads a user gets.              ##
downloadlimit = 1;

## CREDITS (INTEGER MEGABYTES)                                    [OPTIONAL] ##
## The number of credits a user is given when created.                       ##
usercredits = 15;

## DEFAULTTAGLINE (STRING TAGLINE)                                [OPTIONAL] ##
## Sets the default tagline for users when created.                          ##
defaulttagline = "Red currie needs food badly!";

## DEFAULTFLAGS (FLAG|FLAG|...)                                  [MANDATORY] ##
## Default flags that are set for newly created users.  Specify flags using  ##
## "|" chars, no spaces, unless put in " "'s.  Set this to the lowest common ##
## class as there are no way to remove default priviledges (yet).            ##
## Valid flags: UF_NONE      - No extra flags                                ##
##              UF_OVERWRITE - Overwrite files not owned by user.            ##
##              UF_DELETE    - Delete files not owned by user.               ##
##              UF_DIRDELETE - Delete directories not owned by user.         ##
##              UF_GROUP     - Allow group changes.                          ##
##              UF_PASSWORD  - Change others passwords.                      ##
##              UF_STAT      - Can stat users.                               ##
##              UF_PUNISH    - User can SITE NUKE.                           ##
##              UF_MOVE      - Move's of files or directories.               ##
##              UF_KICK      - Allow remote logoff of others.                ##
##              UF_DUPE      - May modify SITE DUPE.                         ##
##              UF_CREDITS   - May give and take credits.                    ##
##              UF_ADDUSER   - May add users and other user tasks.           ##
##              UF_SETIP     - May modify users patterns.                    ##
##              UF_SETRATIO  - May modify users ratio.                       ##
##              UF_SETLIMIT  - May modify users limits.                      ##
defaultflags = "UF_NONE";
# Example - Allow users to overwrite and delete other peoples files.         ##
#defaultflags = "UF_OVERWRITE|UF_DELETE";
# Example - Allow users to do anything except KICK.                          ##
#defaultflags = "UF_ALL|~UF_KICK";


##---------------------------------------------------------------------------##
## GRoUP STuFF ################################################################
##---------------------------------------------------------------------------##

## GROUPFILE (STRING FILENAME)                                    [OPTIONAL] ##
## If you want groups then define GROUPFILE.                                 ##
groupfile = "ftp-data/groups";

## GROUPPATH (STRING PATH)                                        [OPTIONAL] ##
## Paths of where group directories go.  THIS IS A FULL PATH.   Paths will   ##
## automatically be created when groups are added.                           ##
grouppath = "/usr/home/lundman/ftp/data/tmp/groups/";

## GROUPMAXLOGINS (INTEGER LOGINS)                                [OPTIONAL] ##
## This sets the default maximum simultaneous logins each group can have on  ##
## the site at a time.  This is used as a default value when adding with     ##
## SITE GRPADD when the [MAXLOGINS] field is omitted.  0 for no logins at    ##
## all, -1 for unlimited.                                                    ##
groupmaxlogins = -1;

## GROUPMAXRATIO (INTEGER RATIO)                                  [OPTIONAL] ##
## This sets the default maximum ratio a GADMIN can set for users in his/her ##
## group.  This is used as a default value when adding with SITE GRPADD when ##
## the [MAXRATIO] field is omitted.  -1 for leech ratio.                     ##
groupmaxratio = 3;

## GROUPMAXIDLE (INTEGER RATIO)                                   [OPTIONAL] ##
## This sets the default maximum idle time for users in a group.  This is    ##
## used as a default value when adding with SITE GRPADD when the [MAXIDLE]   ##
## field is omitted.  -1 for unlimited.                                      ##
groupmaxidle = -1;

## GROUPTOTALSLOTS (INTEGER SLOTS)                                [OPTIONAL] ##
## This sets the default number of slots for a group when creating it.  This ##
## is used as a default value when adding with SITE GRPADD when the          ##
## [TOTALSLOTS] field is omitted.  0 means none, -1 means unlimited slots.   ##
grouptotalslots = 5;

## GROUPLEECHSLOTS (INTEGER SLOTS)                                [OPTIONAL] ##
## This sets the default number of leech slots for a group when creating a   ##
## new group.  This is used as a default value when adding with SITE         ##
## GRPADD when the [LEECHSLOTS] field is omitted.  0 means none, -1 means    ##
## unlimited slots.                                                          ##
groupleechslots = 0;

## NOGROUPNAME (STRING NAME)                                      [OPTIONAL] ##
## What group name to use if a user does not have a group associated with it ##
## Default is "NoGroup".                                                     ##
nogroupname = "NoGroup";

## GROUPPATTERNLIMIT (INTEGER OCTET)                              [OPTIONAL] ##
## Do we limit the kind of patterns GROUP ADMINs can set for users. This is  ##
## the octet position where wildcard characters may appear. These include the##
## cxharacters "?*[]". Specify 0 for any pattern (including just "*"), use 1 ##
## for class A (192.*).  2 class B (192.168.*).  3 class C (192.168.10.*).   ##
## and 4 for no wild cards. (192.168.10.22).
#group_pattern_limit = 0;
#Not yet implemented.


##---------------------------------------------------------------------------##
## FiLE CHeCKING ##############################################################
##---------------------------------------------------------------------------##

## FILECHECK (BLOCK)                                              [OPTIONAL] ##
## File checking, in ascending order, put the most common extension last.    ##
## If you don't want file checking, comment all filecheck lines out.         ##
## The following keywords can replace the test-exe string:                   ##
## FREE           - File with extension is free.                             ##
## NOCHECK        - File is not check, but you are awarded bytes.            ##
## INTERNAL       - For .diz/.sfv testing, this can be performed internally  ##
##                                                                           ##
## The following variables are set:                                          ##
## $DIZ_FILE      - Filename just uploaded.                                  ##
## $DIZ_DIR       - Path to directory containing file.                       ##
## $DIZ_USER      - Username of the uploader.                                ##
## $DIZ_GROUP     - Group name of the uploader.                              ##
## $DIZ_SITE      - Site name.                                               ##
##                                                                           ##
## Additionally, upon failure, the return reason string can be passed:       ##
## $DIZ_REASON    - Empty file is created like $DIZ_FILE_$DIZ_REASON         ##
##                  E.G. foobar.r02_MISSING_SFV_FILE                         ##
filecheck {
	ext = "*.a[0123456789][0123456789]";
	prog = "/usr/local/bin/unarj t";
	val = 0;
};
filecheck { ext = "*.sit";     prog = "NOCHECK";                  val = 0; };
filecheck { ext = "*.lzx";     prog = "NOCHECK";                  val = 0; };
filecheck { ext = "*.txt";     prog = "FREE";                     val = 0; };
filecheck { ext = "*.diz";     prog = "INTERNAL";                     val = 0; };
filecheck { ext = "*.doc";     prog = "FREE";                     val = 0; };
filecheck { ext = "*.nfo";     prog = "FREE";                     val = 0; };
filecheck { ext = "*.message"; prog = "FREE";                     val = 0; };
filecheck { ext = "*.gz";      prog = "/usr/local/bin/gunzip -t"; val = 0; };
filecheck { ext	= "*.Z";       prog = "/usr/local/bin/gunzip -t"; val = 0; };
filecheck { ext	= "*.lha";     prog = "/usr/local/bin/lha -t";    val = 0; };
filecheck { ext	= "*.arj";     prog = "/usr/local/bin/unarj t";   val = 0; };
filecheck { ext	= "*.dms";     prog = "/usr/local/bin/dmsdiz -t"; val = 0; };
filecheck { ext	= "*.zip";     prog = "/usr/pkg/bin/unzip -t";    val = 0; };
filecheck { ext = "*.sfv";             prog = "INTERNAL";         val = 0; };
filecheck { ext = "*.md5";             prog = "INTERNAL";         val = 0; };
filecheck { ext = "*.[rs][0-9][0-9]";  prog = "INTERNAL";         val = 0; };
filecheck { ext = "*.rar";             prog = "INTERNAL";         val = 0; };
filecheck { ext = "*.[0-9][0-9][0-9]"; prog = "INTERNAL";         val = 0; };
filecheck { ext = "*.mp3";             prog = "INTERNAL";         val = 0; };


## MAXSIZECHECK (INTEGER MB)                                     [MANDATORY] ##
## Maximum size of archive testing.  Set this if your machine can't handle   ##
## testing archives over a certain size.  Set to 0 if you don't have any     ##
## problems :)  Specify in MB.                                               ##
maxsizecheck = 0;

## BACKGROUNDTEST (ON/OFF)                                       [MANDATORY] ##
## Background archive testing. If this is enabled the archive-testing is     ##
## put in the background, and failures are reported by SITE MSG (if          ##
## enabled) and renamed to filename.bad.                                     ##
backgroundtest = on;

## AUTOEXTRACT_DIZ (STRING EXTRACTOR)                             [OPTIONAL] ##
## NOTE: THIS FEATURE SHOULD BE RENAMED. IT EXECUTES A SCRIPT WHEN A RELEASE ##
##       IS COMPLETE. Traditionally, this was to extract .nfo/.diz.          ##
##
## Do you want automatic file_id.diz extraction?  When an upload has         ##
## completed, and archive testing was successful, it checks for the          ##
## existance of "file_id.diz" file, and if not found executes the program    ##
## defined to extract it. File name is appened, and it assumes stdout        ##
##
## $1: The first argument to the script is the directory of the release      ##
## $2: The second is the filename of the SFV file, if any.                   ##
#
#autoextract_diz = "/usr/local/bin/unrar x $1/*.rar";

##---------------------------------------------------------------------------##
## IRC ANNoUNCE BoT ###########################################################
##---------------------------------------------------------------------------##

## IRCBOT (BLOCK)                                                 [OPTIONAL] ##
## Defines an IRCBOT to send announce messages to.  The following fields are ##
## acceptable:                                                               ##
##  - host (string)  Hostname bot is on.                                     ##
##  - port (integer) Port bot is on.                                         ##
##  - pass (string)  Password for authentication.                            ##
ircbot {
	host = "127.0.0.1";
	port = 2101;
	pass = "feedcat2day";
};

## IRCCMDS (on/off)                                               [OPTIONAL] ##
## Allow commands from ircbots to be parsed and processed.                   ##
irccmds = off;


## IRC_SRC_PORT (INTEGER PORT)                                    [OPTIONAL] ##
## Source port to use for irc communication. Especially important when using ##
## incoming irc commands (irccmds).
#irc_src_port = 9888;




##---------------------------------------------------------------------------##
## ENCRYPTiON #################################################################
##---------------------------------------------------------------------------##

## ALLOW_ONLY_SECURE (ON/OFF)                                    [MANDATORY] ##
## Allow only encrypted connections to the server (TLS/SRP)                  ##
allow_only_secure = off;

## ALLOW_ONLY_SECURE_DATA (ON/OFF)                               [MANDATORY] ##
## Allow only encrypted data connections to the server.                      ##
allow_only_secure_data = off;

## TLS/SSL - See TLS.ReadMeFirst for more information and help. ##############

## TLS_RSAFILE (STRING FILENAME)                                 [OPTIONAL] ##
## Full path to the one file containing both your RSA PRIVATE KEY and RSA   ##
## CERIFICATE.                                                              ##
tls_rsafile = "ftp-data/lftpd.pem";

## TLS_CIPHERS (CIPHERLIST)                                      [OPTIONAL] ##
## Specify the list of allowed ciphers, default is ALL but you might want   ##
## to disallow lame 40 bit ciphers such as DES.                             ##
#tls_ciphers  "RC4-SHA"
tls_ciphers = "ALL";

## EGDSOCKET (STRING FILENAME)                                   [OPTIONAL] ##
## Support for EGD/PRNGD, for systems without /dev/urandom.
#egdsocket = "/var/run/egd-pool";


##---------------------------------------------------------------------------##
## SITECUST ###################################################################
##---------------------------------------------------------------------------##

## SITECUST (BLOCK)                                               [OPTIONAL] ##
## You may setup some custom SITE commands that will either display text     ##
## files or execute binaries, the output of which is directed to the user    ##
## who issues the command.                                                   ##
##                                                                           ##
## The following fields are mandatory:                                       ##
##  - name (string)  Name of the command.                                    ##
##  - type (string)  The type of command, TEXT or EXEC.                      ##
##  - desc (string)  A short few word description showed in SITE HELP.       ##
## One of the following fields must also be present:                         ##
##  - exec (string)  Full path to the executable for EXEC commands.          ##
##  - file (string)  Full path to the textfile for TEXT commands.            ##
## Optional fields:                                                          ##
##  - flags (string) A list of flags the user must have, same as the flags   ##
##                   listed in the DEFAULTFLAGS option above.                ##
#sitecust {
#	name = "RULES";
#	type = "TEXT";
#	desc = "The site rules, obey these or suffer our wrath!";
#	file = "ftp-data/rules.txt";
#};

#sitecust {
#	name = "WELCOME";
#	type = "TEXT";
#	desc = "Display the site WELCOME message.";
#	file = "ftp-data/welcome.txt";
#};

#sitecust {
#	name = "SEARCH";
#	type = "EXEC";
#	desc = "Search the site for a file/directory.";
#	exec = "ftp-data/search.sh";
#	args = "1+";
#};

#sitecust {
#	name = "MOVE";
#	type = "EXEC";
#	desc = "move a directory: <dir> <section>";
#	exec = "ftp-data/move.sh";
#	flags = "UF_SEEALL";
#	args = "2,dir,section";
#};

# args = 2;  # exactly two arguments
# args = +2; # two, or more (2, 3, 4, ... )
# args = -2; # two, or less (2, 1, 0)
#
# with type
# args = +2, "[dir] [section]"  # 2 defined types, more is variable.
#
# other types:
#
# [dir]       - type is a directory (path is reduced and security checked.)
# [file]      - type is a file               ( - '' - )
# [dirorfile] - type is a file, or directory ( - '' - )
# [section]   - type is a section name, and permission is checked for user.
#               the relative path is given to the script.
# [user]      - type is a user of the lundftpd user db file.
# [group]     - type is a group
# [integer]   - type is an integer value
#
# One limitation is that if you want "at least" some number of arguments,
# of "a certain type" but can also be variable number of arguments, the type
# specificed arguments must come first, and the variable arguments after.
# ie, CMD 1+ [section] optarg1 optarg2 ...   is ok
#     CMD 1+ optarg1 optarg2 [section] ...   will not work, but, you could use
#     CMD 1+ [any] [any] [section]           if it HAD to be the 3rd argument.
